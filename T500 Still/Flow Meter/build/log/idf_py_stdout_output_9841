Command: ninja all
[1/11] Performing build step for 'bootloader'
[1/1] cd "/home/rob/Documents/Github/shed-scripts/T500 Still/Flow Meter/build/bootloader" && /home/rob/.espressif/python_env/idf6.0_py3.11_env/bin/python /home/rob/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 /home/rob/Documents/Github/shed-scripts/T500\ Still/Flow\ Meter/build/bootloader/bootloader.bin
Bootloader binary size 0x6690 bytes. 0x970 bytes (8%) free.
[2/11] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/web_dashboard.c.obj
[3/11] No install step for 'bootloader'
[4/11] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/http_server.c.obj
[5/11] Completed 'bootloader'
[6/11] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/main.c.obj
[7/11] Linking C static library esp-idf/main/libmain.a
[8/11] Generating esp-idf/esp_system/ld/sections.ld
[9/11] Linking CXX executable t500_dual_flow_servo.elf
[10/11] Generating binary image from built executable
esptool.py v4.9.0
Creating esp32 image...
Merged 2 ELF sections
Successfully created esp32 image.
Generated /home/rob/Documents/Github/shed-scripts/T500 Still/Flow Meter/build/t500_dual_flow_servo.bin
[11/11] cd "/home/rob/Documents/Github/shed-scripts/T500 Still/Flow Meter/build" && /home/rob/.espressif/python_env/idf6.0_py3.11_env/bin/python /home/rob/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app /home/rob/Documents/Github/shed-scripts/T500\ Still/Flow\ Meter/build/partition_table/partition-table.bin /home/rob/Documents/Github/shed-scripts/T500\ Still/Flow\ Meter/build/t500_dual_flow_servo.bin
t500_dual_flow_servo.bin binary size 0xea950 bytes. Smallest app partition is 0x100000 bytes. 0x156b0 bytes (8%) free.
